111 mpila nteris 200 15
222 ou mpoi 30 5

import java.util.List;

class RandomizedBST implements TaxEvasionInterface {
    private class TreeNode {
        LargeDepositor item;
        TreeNode left;  // pointer to left subtree
        TreeNode right; // pointer to right subtree
        int N;  //number of nodes in the subtree rooted at this TreeNode

        TreeNode(LargeDepositor item){
            this.item = item;
            this.left = null;
            this.right = null;
        }
    }

    private TreeNode root;

    public void insert(LargeDepositor item) {
        root = insertR(item, root);
    }

    private TreeNode insertR(LargeDepositor item, TreeNode node){

        if(node == null){
            return new TreeNode(item);
        }
        if(Math.random()*(node.N +1) < 1.0){
            return insertAsRoot(item, node);
        }
        if (item.key() < node.item.key()){
            node.left = insertR(item, node.left);
        }else{
            node.right = insertR(item, node.right);
        }

        node.N++; 
        return node;
    }

    private TreeNode insertAsRoot(LargeDepositor item, TreeNode node){
        TreeNode newRoot = new TreeNode(item);
        newRoot.left = root;
        return newRoot; 
    }

    LargeDepositor search(int key){
        return searchR(root, key);
    }

    private LargeDepositor searchR(TreeNode node, int key){

        if(node == null){
            return null;
        }
        if(node.item.key() == key){
            return node.item;
        }
        if(node.item.key() < key){
            return searchR(node.left, key);
        }else{
            return searchR(node.right, key);
        }
    }

    public void load(String filename){

    }

    public void updateSavings(int AFM, double savings){

    }

    public LargeDepositor searchByAFM(int AFM){

    }

    public List searchByLastName(String last_name){

    }

    public void remove(int AFM){

    }

    public double getMeanSavings(){

    }

    public void printÎ¤opLargeDepositors(int k){

    }

    public void printByAFM(){

    }

}